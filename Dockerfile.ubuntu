FROM ubuntu:rolling as build

# Backup libs so we know what to copy later to runtime image
RUN find /lib/x86_64-linux-gnu/ /usr/lib/x86_64-linux-gnu/ -name '*.so*' > /shared-libs.list

RUN apt-get update && \
  apt-get install -y --no-install-recommends \
  dpkg-dev \
  g++-8 \
  libc6-dev \
  libssl-dev \
  openssl \
  cmake \
  libboost-dev \
  libboost-system-dev \
  libboost-thread-dev \
  libgmp-dev \
  libcurl4-openssl-dev \
  && rm -rf /var/lib/apt/lists/*

# We only installed gcc-8 -> make default
RUN ln -s /usr/bin/gcc-8 /usr/bin/gcc \
  && ln -s /usr/bin/g++-8 /usr/bin/g++ \
  && ln -s /usr/bin/gcov-8 /usr/bin/gcov

WORKDIR /app
COPY extern extern
COPY cmake cmake
COPY include include
COPY test test
COPY scripts scripts
COPY CMakeLists.txt sepilinker.cpp ./

# build!
WORKDIR /app/build
RUN cmake \
  -DCMAKE_FLAGS_EXTRA=-w \
  .. \
  && make sel -j $(nproc)

# copy dependencies
RUN mkdir /deps; \
  echo sel | while read bin; do \
    ldd $bin | cut -d' ' -f 3 | grep -F .so | while read lib; do \
      if ! grep -Fq $lib /shared-libs.list; then \
        echo copy dependency $lib; \
        cp -L $lib /deps; \
      fi; \
    done; \
  done

# generating keys
WORKDIR /app/data
RUN ../scripts/genkeys.sh .

# copy everything into minimal image
FROM ubuntu:rolling

RUN groupadd -r sel && useradd --no-log-init -r -g sel sel

WORKDIR /app
COPY --from=build /app/build/sel /app/sel
COPY --from=build /deps /deps
# openssl keys
COPY --from=build --chown=sel:sel /app/data /data
# json schemes, default config and circuit files
COPY --chown=sel:sel data/*.json /data/
COPY --chown=sel:sel data/circ /data/circ

#RUN chmod a+r circ/* \
RUN mkdir /log && chown sel:sel /log

# find libraries in the correct order
ENV LD_LIBRARY_PATH=/lib/x86_64-linux-gnu/:/deps/

EXPOSE 8161
EXPOSE 1337-1344

USER sel:sel
ENTRYPOINT ["/app/sel"]
